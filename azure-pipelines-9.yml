# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Use the desired Python version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

# Install dependencies and test your Python script
- script: |
    python --version
    pip install -r requirements.txt
    python add1.py
  displayName: 'Install Dependencies and Run Python Script'

# Run tests (optional step if you have a test suite)
- script: |
    python -m unittest discover -s tests
  displayName: 'Run Unit Tests'

# Build the Python package
- script: |
    python setup.py sdist bdist_wheel
  displayName: 'Build Python Package'

# Publish the package to a PyPI-compatible index (e.g., TestPyPI)
- script: |
    pip install twine
    twine upload --repository-url https://test.pypi.org/legacy/ dist/*
  env:
    TWINE_USERNAME: $(PYPI_USERNAME)
    TWINE_PASSWORD: $(PYPI_PASSWORD)
  displayName: 'Publish Package to TestPyPI'
